name: CI/CD using GitHub Actions & Docker Compose

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode and write application.yml
        run: |
          echo "${{ secrets.ALL_SECRETS }}" | base64 -d > src/main/resources/application.yml

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Build Docker Image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/cafefinder:latest \
            --file Dockerfile .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/cafefinder:latest

      - name: Deploy to EC2 via Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            set -eux

            # 홈 디렉토리로 이동
            cd /home/ec2-user

            # 프로젝트가 없으면 클론
            if [ ! -d cafe-finder ]; then
              git clone https://github.com/pbk2312/CafeFinder.git cafe-finder
            fi

            # 앱만 재기동
            cd cafe-finder
            sudo docker-compose pull app
            sudo docker-compose up -d app

            # Logstash 컨테이너는 호스트 /home/ec2-user 경로의 logstash.conf, logs 를 사용
            # 기존에 띄워진 logstash 컨테이너가 있으면 재생성
            sudo docker pull docker.elastic.co/logstash/logstash:7.10.0
            if sudo docker ps -a -q -f name=logstash | grep -q .; then
              sudo docker rm -f logstash
            fi
            sudo docker run -d \
              --name logstash \
              -v /home/ec2-user/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \
              -v /home/ec2-user/logs:/var/log/logstash \
              docker.elastic.co/logstash/logstash:7.10.0

            # 불필요한 Docker 리소스 정리
            sudo docker system prune -f
