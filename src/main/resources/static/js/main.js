import {checkLoginStatus, logout} from "./auth.js";
import {searchCafes} from "./cafeSearch.js"
import {displayPopularCafes} from "./popularCafes.js";
import {seoulDistrictStatus} from "./districtDisplay.js";
import {displayRecommendedCafes} from "./recommandCafesDisplay.js";
import {displayCafeInfo} from "./googleMap.js";

window.logout = logout;

document.addEventListener("DOMContentLoaded", () => {
  fetchPopularCafes();

  const popularContainer = document.getElementById("popular-cafe-container");
  if (popularContainer) {
    popularContainer.addEventListener("click", (event) => {
      const card = event.target.closest(".cafe-item");
      if (card) {
        const cafeCode = card.getAttribute("data-cafe-code");
        if (cafeCode) {
          fetch(`/api/cafes/click/${cafeCode}`, {
            method: "POST",
            credentials: "include",
          }).finally(() => {
            window.location.href = `/cafe/detail/${cafeCode}`;
          });
        }
      }
    });
  }

  checkLoginStatus().then((isLoggedIn) => {
    if (isLoggedIn) {
      fetchRecommendedCafes();
    } else {
      const recommendedSection = document.getElementById("recommended-section");
      if (recommendedSection) {
        recommendedSection.style.display = "none";
      }
    }
  });

  fetchSeoulDistrictStatus();

  const guContainer = document.getElementById("gu-review-container");
  if (guContainer) {
    guContainer.addEventListener("click", (event) => {
      const card = event.target.closest(".cafe-item");
      if (card) {
        const cafeCode = card.getAttribute("data-cafe-code");
        if (cafeCode) {
          fetch(`/api/cafes/click/${cafeCode}`, {
            method: "POST",
            credentials: "include",
          }).finally(() => {
            window.location.href = `/cafe/detail/${cafeCode}`;
          });
        }
      }
    });
  }

  const recommendedContainer = document.getElementById(
      "recommended-cafe-container");
  if (recommendedContainer) {
    recommendedContainer.addEventListener("click", (event) => {
      const card = event.target.closest(".cafe-item");
      if (card) {
        const cafeCode = card.getAttribute("data-cafe-code");
        if (cafeCode) {
          fetch(`/api/cafes/click/${cafeCode}`, {
            method: "POST",
            credentials: "include",
          }).finally(() => {
            window.location.href = `/cafe/detail/${cafeCode}`;
          });
        }
      }
    });
  }

  const searchResultsContainer = document.getElementById(
      "search-results-container");
  if (searchResultsContainer) {
    searchResultsContainer.addEventListener("click", (event) => {
      const card = event.target.closest(".cafe-item");
      if (card) {
        const cafeCode = card.getAttribute("data-cafe-code");
        if (cafeCode) {
          fetch(`/api/cafes/click/${cafeCode}`, {
            method: "POST",
            credentials: "include",
          }).finally(() => {
            window.location.href = `/cafe/detail/${cafeCode}`;
          });
        }
      }
    });
  }
});

// Ï≤òÏùå Í≤ÄÏÉâÎ≤ÑÌäº ÎàåÎ†ÄÏùÑ Îïå
export const searchForm = document.getElementById("cafe-search-form");
if (searchForm) {
  searchForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const searchInput = document.getElementById("cafe-search-input");
    if (!searchInput) {
      return;
    }
    const searchValue = searchInput.value.trim();
    if (!searchValue) {
      alert("Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
      return;
    }
    // Í≤ÄÏÉâÏñ¥Í∞Ä ÏûàÏúºÎ©¥ Ìò∏Ï∂ú
    searchCafes(searchValue, 0);
  });
}

// ‚îÄ‚îÄ Ïù∏Í∏∞ Ïπ¥Ìéò Í¥ÄÎ†® Ìï®Ïàò ‚îÄ‚îÄ
function fetchPopularCafes() {
  fetch("/api/cafes/mostClicked")
  .then((response) => response.json())
  .then((data) => {
    if (data.success && Array.isArray(data.data)) {
      displayPopularCafes(data.data);
    }
  })
  .catch((error) => {
    console.error("Ïù∏Í∏∞ Ïπ¥Ìéò Î∂àÎü¨Ïò§Í∏∞ Ïò§Î•ò:", error);
  });
}

// ‚îÄ‚îÄ Íµ¨ Î¶¨Î∑∞ ÌÜµÍ≥Ñ Í¥ÄÎ†® Ìï®Ïàò ‚îÄ‚îÄ
function fetchSeoulDistrictStatus() {
  fetch("/api/seoulDistrictStatus")
  .then((response) => response.json())
  .then((data) => {
    if (data.success) {
      seoulDistrictStatus(data.data);
      updateStarRatings();
    }
  })
  .catch((error) => console.error("Íµ¨ Î¶¨Î∑∞ ÌÜµÍ≥Ñ Í∞ÄÏ†∏Ïò§Í∏∞ Ïò§Î•ò:", error));
}

function updateStarRatings() {
  document.querySelectorAll(".star-rating").forEach((starContainer) => {
    const rating = parseFloat(starContainer.getAttribute("data-rating"));
    let stars = "";
    for (let i = 1; i <= 5; i++) {
      stars += i <= rating ? "‚òÖ" : "‚òÜ";
    }
    starContainer.innerHTML = stars;
  });
}

// ‚îÄ‚îÄ Ï∂îÏ≤ú Ïπ¥Ìéò Í¥ÄÎ†® Ìï®Ïàò ‚îÄ‚îÄ
function fetchRecommendedCafes() {
  fetch("/api/member/getRecommandCafes", {credentials: "include"})
  .then((response) => response.json())
  .then((data) => {
    if (data.success && Array.isArray(data.data)) {
      displayRecommendedCafes(data.data);
    }
  })
  .catch((error) => {
    console.error("Ï∂îÏ≤ú Ïπ¥Ìéò Î∂àÎü¨Ïò§Í∏∞ Ïò§Î•ò:", error);
  });
}

// main.js

let map;
let userMarker;              // ÏÇ¨Ïö©ÏûêÏùò ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§
let cafeMarkers = [];         // Ï£ºÎ≥Ä Ïπ¥Ìéò ÎßàÏª§Îì§ÏùÑ Ï†ÄÏû•Ìï† Î∞∞Ïó¥

// üõ†Ô∏è 1) ÏïÑÏù¥ÏΩò Î≥ÄÏàòÎ•º ÏµúÏÉÅÎã®Ïóê ÏÑ†Ïñ∏Îßå Ìï¥ Îë°ÎãàÎã§.
let defaultCafeIcon;
let selectedCafeIcon;

// DOMContentLoaded Ïù¥Î≤§Ìä∏ÏóêÏÑú ÏúÑÏπò Í∞êÏãú Î∞è Google API Î°úÎìú ÏãúÏûë
document.addEventListener("DOMContentLoaded", () => {
  fetch('/api/google-key')
  .then(res => {
    if (!res.ok) {
      throw new Error('ÌÇ§ Î°úÎìú Ïã§Ìå®');
    }
    return res.json();
  })
  .then(data => {
    // Google Maps JS API Ïä§ÌÅ¨Î¶ΩÌä∏Î•º ÎèôÏ†ÅÏúºÎ°ú ÏÉùÏÑ±¬∑ÏÇΩÏûÖ
    const s = document.createElement('script');
    s.src = `https://maps.googleapis.com/maps/api/js?key=${data.key}`;
    s.async = true;

    s.onload = () => {
      // üõ†Ô∏è 2) API Î°úÎìúÎêú ÏãúÏ†êÏóê ÏïÑÏù¥ÏΩò Í∞ùÏ≤¥Î•º Ï¥àÍ∏∞Ìôî
      defaultCafeIcon = {
        url: "https://img.icons8.com/ios-filled/50/coffee-to-go.png",
        scaledSize: new google.maps.Size(35, 35),
      };
      selectedCafeIcon = {
        url: "https://img.icons8.com/ios-filled/50/000000/coffee-to-go.png",
        scaledSize: new google.maps.Size(45, 45),
      };

      // Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä Ï§ÄÎπÑÎêú ÌõÑÏóêÏïº ÏßÄÏò§Î°úÏºÄÏù¥ÏÖò Í∞êÏãú ÏãúÏûë
      if (navigator.geolocation) {
        navigator.geolocation.watchPosition(
            position => {
              const lat = position.coords.latitude;
              const lng = position.coords.longitude;

              if (!map) {
                initMap(lat, lng);
              } else {
                updateUserMarker(lat, lng);
              }
              fetchNearbyCafes(lat, lng);
            },
            err => {
              console.error('ÏúÑÏπò Ïò§Î•ò:', err);
              alert('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
            }
        );
      } else {
        alert('Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî ÏúÑÏπò Í∏∞Îä•ÏùÑ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.');
      }
    };

    document.head.appendChild(s);
  })
  .catch(console.error);
});

// Íµ¨Í∏Ä Îßµ Ï¥àÍ∏∞Ìôî Ìï®Ïàò
function initMap(userLat, userLng) {
  map = new google.maps.Map(document.getElementById("map"), {
    center: {lat: userLat, lng: userLng},
    zoom: 17,
  });

  userMarker = new google.maps.Marker({
    position: {lat: userLat, lng: userLng},
    map: map,
    title: "ÎÇ¥ ÏúÑÏπò",
    icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png",
  });
}

// ÏÇ¨Ïö©Ïûê ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò
function updateUserMarker(userLat, userLng) {
  map.setCenter({lat: userLat, lng: userLng});
  if (userMarker) {
    userMarker.setPosition({lat: userLat, lng: userLng});
  }
}

// APIÎ•º ÌÜµÌï¥ Ï£ºÎ≥Ä Ïπ¥Ìéò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
function fetchNearbyCafes(latitude, longitude) {
  const url = `/api/cafes/by-distance?latitude=${latitude}&longitude=${longitude}`;

  fetch(url, {
    method: "POST",
    headers: {"Content-Type": "application/json"},
  })
  .then(response => {
    if (!response.ok) {
      throw new Error("ÎÑ§Ìä∏ÏõåÌÅ¨ ÏùëÎãµÏù¥ Ï†ïÏÉÅÏù¥ ÏïÑÎãôÎãàÎã§.");
    }
    return response.json();
  })
  .then(data => {
    if (data.success && data.data) {
      // Í∏∞Ï°¥ Ïπ¥Ìéò ÎßàÏª§ Ï†úÍ±∞ (Ï§ëÎ≥µ ÌëúÏãú Î∞©ÏßÄ)
      cafeMarkers.forEach(m => m.setMap(null));
      cafeMarkers = [];
      addCafeMarkers(data.data);
    } else {
      console.error("API Ïò§Î•ò:", data.message);
    }
  })
  .catch(error => {
    console.error("Ïπ¥Ìéò Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•ò Î∞úÏÉù:", error);
  });
}

// Ïπ¥Ìéò ÎßàÏª§ ÏÉùÏÑ± Î∞è Ïù¥Î≤§Ìä∏ Î∞îÏù∏Îî©
function addCafeMarkers(cafes) {
  const container = document.getElementById("nearby-cafe-container");
  if (!container) {
    console.error("nearby-cafe-containerÍ∞Ä ÏóÜÏäµÎãàÎã§.");
    return;
  }
  container.innerHTML = ""; // Í∏∞Ï°¥ Î™©Î°ù Ï¥àÍ∏∞Ìôî

  cafes.forEach(cafe => {
    const [latStr, lngStr] = cafe.location.split(",");
    const lat = parseFloat(latStr);
    const lng = parseFloat(lngStr);

    const marker = new google.maps.Marker({
      position: {lat, lng},
      map: map,
      title: cafe.name,
      icon: defaultCafeIcon,
    });

    const infoWindow = new google.maps.InfoWindow({
      content: `
        <div class="cafe-map-tooltip">
          <strong>${cafe.name}</strong><br>
          ‚≠ê ${cafe.averageRating.toFixed(1)} / 5.0
        </div>
      `,
    });

    marker.addListener("mouseover", () => infoWindow.open(map, marker));
    marker.addListener("mouseout", () => infoWindow.close());
    marker.addListener("click", () => {
      marker.setAnimation(google.maps.Animation.BOUNCE);
      setTimeout(() => marker.setAnimation(null), 700);
      marker.setIcon(selectedCafeIcon);
      displayCafeInfo(cafe);
    });

    cafeMarkers.push(marker);
  });
}
