version: '3.7'

services:
  es:
    container_name: es
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.5
    environment:
      - node.name=single-node
      - cluster.name=backtony
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - es-bridge

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.5
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5601:5601
    depends_on:
      - es
    networks:
      - es-bridge

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - 2181:2181
    networks:
      - es-bridge

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - es-bridge

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - es-bridge

  app:
    container_name: cafefinder
    image: pbk2312/cafefinder:latest
    ports:
      - '8080:8080'
    environment:
      # 활성화할 프로파일: elasticsearch
      SPRING_PROFILES_ACTIVE: elasticsearch
    volumes:
      # 호스트의 CSV 디렉토리를 컨테이너 /data로 마운트
      - /home/ec2-user/data:/data
    depends_on:
      - redis
      - kafka
      - zookeeper
      - es
    networks:
      - es-bridge

networks:
  es-bridge:
    driver: bridge
